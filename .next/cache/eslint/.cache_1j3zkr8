[{"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\auth\\login.ts":"1","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\auth\\register.ts":"2","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\hello.ts":"3","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\interfaz.ts":"4","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\carrito\\index.tsx":"5","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\index.tsx":"6","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\imageContainer\\carousseImage.tsx":"7","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\imageContainer\\ImageContainer.tsx":"8","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\index.tsx":"9","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\SelectorVariante.tsx":"10","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\index.tsx":"11","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\[categoria]\\index.tsx":"12","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\profile\\index.tsx":"13","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\tools\\index.tsx":"14","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\_app.tsx":"15","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\breadcum\\index.tsx":"16","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\buttons\\FetchButton.tsx":"17","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\cart\\CartItemCard.tsx":"18","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\index.tsx":"19","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\inputAuthForm.tsx":"20","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\login.tsx":"21","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\register.tsx":"22","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\footer\\index.tsx":"23","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\hydrationZustand.tsx":"24","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\index.tsx":"25","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\navbar\\descktopNavbar.tsx":"26","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\navbar\\index.tsx":"27","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\navbar\\mobileNavbar.tsx":"28","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\spinner\\index.tsx":"29","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\WhatsappFloatingButton\\index.tsx":"30","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\modals\\CartModal.tsx":"31","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\product\\productCardItem.tsx":"32","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\product\\productGaleryImage.tsx":"33","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\product\\productImage.tsx":"34","E:\\Projects\\hidrafront\\hidrasport-v2\\components\\reviews\\index.tsx":"35"},{"size":1217,"mtime":1692070186097,"results":"36","hashOfConfig":"37"},{"size":1121,"mtime":1692069091354,"results":"38","hashOfConfig":"37"},{"size":320,"mtime":1690150638433,"results":"39","hashOfConfig":"37"},{"size":152,"mtime":1692069091355,"results":"40","hashOfConfig":"37"},{"size":3634,"mtime":1692069091355,"results":"41","hashOfConfig":"37"},{"size":1485,"mtime":1692069091356,"results":"42","hashOfConfig":"37"},{"size":1048,"mtime":1692069091357,"results":"43","hashOfConfig":"37"},{"size":1223,"mtime":1692069091357,"results":"44","hashOfConfig":"37"},{"size":4976,"mtime":1692069091357,"results":"45","hashOfConfig":"37"},{"size":12330,"mtime":1692069091356,"results":"46","hashOfConfig":"37"},{"size":2277,"mtime":1692069091358,"results":"47","hashOfConfig":"37"},{"size":2516,"mtime":1692069091356,"results":"48","hashOfConfig":"37"},{"size":2089,"mtime":1692070186098,"results":"49","hashOfConfig":"37"},{"size":9038,"mtime":1692069091359,"results":"50","hashOfConfig":"37"},{"size":271,"mtime":1690150638432,"results":"51","hashOfConfig":"37"},{"size":1982,"mtime":1692069091342,"results":"52","hashOfConfig":"37"},{"size":404,"mtime":1692069091342,"results":"53","hashOfConfig":"37"},{"size":755,"mtime":1692070239704,"results":"54","hashOfConfig":"37"},{"size":1533,"mtime":1692069091344,"results":"55","hashOfConfig":"37"},{"size":942,"mtime":1692069091344,"results":"56","hashOfConfig":"37"},{"size":4047,"mtime":1692074137723,"results":"57","hashOfConfig":"37"},{"size":5190,"mtime":1692070186095,"results":"58","hashOfConfig":"37"},{"size":988,"mtime":1692069091345,"results":"59","hashOfConfig":"37"},{"size":452,"mtime":1692069091345,"results":"60","hashOfConfig":"37"},{"size":1466,"mtime":1692070186095,"results":"61","hashOfConfig":"37"},{"size":2033,"mtime":1692070186096,"results":"62","hashOfConfig":"37"},{"size":3236,"mtime":1692069091347,"results":"63","hashOfConfig":"37"},{"size":3782,"mtime":1692070186097,"results":"64","hashOfConfig":"37"},{"size":227,"mtime":1690150638388,"results":"65","hashOfConfig":"37"},{"size":347,"mtime":1692069091343,"results":"66","hashOfConfig":"37"},{"size":409,"mtime":1692069091347,"results":"67","hashOfConfig":"37"},{"size":1177,"mtime":1690150638388,"results":"68","hashOfConfig":"37"},{"size":552,"mtime":1692069091347,"results":"69","hashOfConfig":"37"},{"size":1120,"mtime":1692069091348,"results":"70","hashOfConfig":"37"},{"size":4515,"mtime":1692069091348,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jtoe36",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\auth\\login.ts",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\auth\\register.ts",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\hello.ts",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\api\\interfaz.ts",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\carrito\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\imageContainer\\carousseImage.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\imageContainer\\ImageContainer.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\detalle\\[id]\\SelectorVariante.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\productos\\[categoria]\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\profile\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\tools\\index.tsx",["178"],[],"import { useEffect, useState } from \"react\"; \r\nimport { useAuthStore } from \"@store/auth.store\";\r\nimport useCartStore from '@store/useCartStore'; \r\nimport CartItemCard from \"@components/cart/CartItemCard\";\r\nimport { postCartToBackend } from \"@api/cartAPI\";\r\nimport { INewCartData, ICartSelector } from \"@interfaces/ICart\";\r\nimport CartModal from \"@components/modals/CartModal\"\r\nimport { SERVER_URL } from \"@config/index\";\r\n\r\nconst CartsManagement = () => {\r\n  const { userSession } = useAuthStore();\r\n  const { cartData, fetchCart } = useCartStore();\r\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState<boolean>(false);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState<boolean>(false);\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [isPublic, setIsPublic] = useState<boolean>(false);\r\n  const [clear, setClear] = useState<boolean>(false);\r\n  const [isNameTaken, setIsNameTaken] = useState<boolean>(false);\r\n  const [cartsList, setCartsList] = useState<ICartSelector[]>([]);\r\n  const [selectedCartId, setSelectedCartId] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, []);\r\n\r\n  const checkCartNameAvailability = async (cartName: string) => {\r\n    try {\r\n      const encodedName = encodeURIComponent(cartName);\r\n      const response = await fetch(`${SERVER_URL}/api/sessions/cart/cart-name-available/${encodedName}/`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        await response.json();\r\n        setIsNameTaken(false);\r\n      } else {\r\n        setIsNameTaken(true);\r\n      }\r\n    } catch (error) {\r\n      setIsNameTaken(false);\r\n      console.error(\"Error checking cart name availability:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchPublicCartList = async () => {\r\n    try {\r\n      const response = await fetch(`${SERVER_URL}/api/sessions/cart/all-carts/`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCartsList(data);\r\n      }\r\n    } catch (error) {\r\n      setIsNameTaken(false);\r\n      console.error(\"Error checking carts:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCart = async (selectedCartId: number | null) => {\r\n    try {\r\n      const response = await fetch(`${SERVER_URL}/api/sessions/cart/delete-cart/${selectedCartId}/`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": `Token ${userSession.token}`\r\n        },\r\n      });\r\n  \r\n      if (response.ok) {\r\n        closeModal()\r\n      }\r\n    } catch (error) {\r\n      setIsNameTaken(false);\r\n      console.error(\"Error checking carts:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNameChange = (value: string) => {\r\n    setName(value);\r\n    checkCartNameAvailability(value);\r\n  };\r\n\r\n  const openModal = (name: string) => {\r\n    if(name === \"create\"){\r\n      checkCartNameAvailability(name)\r\n      setIsCreateModalOpen(true);\r\n    }else if(name === \"delete\"){\r\n      setIsDeleteModalOpen(true);\r\n      fetchPublicCartList();\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsCreateModalOpen(false);\r\n    setIsDeleteModalOpen(false)\r\n  };\r\n\r\n  const handleFormSubmit = async () => {\r\n    const newCartData: INewCartData = {\r\n      name: name,\r\n      public: isPublic,\r\n      clear: clear\r\n    };\r\n\r\n    try {\r\n      const response = await postCartToBackend(newCartData, userSession.token); \r\n      if (response.ok) {\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n    }\r\n\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col justify-center\">\r\n      {(isCreateModalOpen || isDeleteModalOpen) && <div className=\"fixed inset-0 bg-gray-600 opacity-50 z-10\"></div>}\r\n\r\n      {userSession.admin ? (\r\n        <div className=\"container mx-auto px-4 flex flex-col items-center gap-4\">\r\n          <div className=\"flex flex-col gap-4\">\r\n            <div>\r\n              <h1 className=\"text-5xl font-bold\">Crear o modificar carritos publicos</h1>\r\n            </div>\r\n            <div className=\"flex justify-center gap-4\">\r\n            <button onClick={() => openModal(\"create\")} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\">\r\n              Crear carrito\r\n            </button>\r\n            {isCreateModalOpen && (\r\n              <CartModal closeModal={closeModal}>\r\n                <h1  className=\"text-2xl font-bold\">Elija nombre y visibilidad del carrito</h1>\r\n                <div className=\"flex gap-4\">\r\n                  <label htmlFor=\"name\">Nombre:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => handleNameChange(e.target.value)}\r\n                    onBlur={() => checkCartNameAvailability(name)}\r\n                    className={`border ${isNameTaken ? \"border-red-500\" : \"border-gray-800\"} w-60`}\r\n                  />\r\n                </div>\r\n                {isNameTaken ? (\r\n                  <p className=\"text-red-500\">El carrito ya existe</p>\r\n                  ) : (\r\n                  <p className=\"text-green-700\">El carrito está disponible</p>\r\n                )}\r\n                <div className=\"flex gap-4\">\r\n                  <label htmlFor=\"public\">Public:</label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"public\"\r\n                    checked={isPublic}\r\n                    onChange={(e) => setIsPublic(e.target.checked)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex gap-4\">\r\n                  <label htmlFor=\"clear\">Limpiar carrito al terminar:</label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"clear\"\r\n                    checked={clear}\r\n                    onChange={(e) => setClear(e.target.checked)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex gap-4\">\r\n                  <button\r\n                    onClick={handleFormSubmit}\r\n                    disabled={isNameTaken}\r\n                    className={`bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-4 ${\r\n                      isNameTaken ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                  >\r\n                    Crear carrito\r\n                  </button>\r\n                  <button\r\n                    className=\"mt-4 bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n                    onClick={closeModal}\r\n                  >\r\n                    Cerrar\r\n                  </button>\r\n                </div>\r\n              </CartModal>\r\n            )}\r\n\r\n\r\n            <button onClick={() => openModal(\"delete\")} className=\"bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4\">\r\n              Borrar carrito\r\n            </button>\r\n            {isDeleteModalOpen && (\r\n              <CartModal closeModal={closeModal}>\r\n                <div className=\"flex flex-col gap-4\">\r\n                  <h1 className=\"text-2xl font-bold\">Selecciona el carrito para borrar</h1>\r\n                  <select\r\n                    value={selectedCartId || ''}\r\n                    onChange={(e) => setSelectedCartId(Number(e.target.value) || null)}\r\n                    >\r\n                      <option value=\"\">Elegir</option>\r\n                      {cartsList.map((cart) => (\r\n                        <option key={cart.id} value={cart.id}>\r\n                          {cart.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"flex gap-4\">\r\n                  <button\r\n                      className=\"mt-4 bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n                      onClick={() => handleDeleteCart(selectedCartId)}\r\n                    >\r\n                      Borrar carrito seleccionado\r\n                    </button>\r\n                  <button\r\n                      className=\"mt-4 bg-red-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n                      onClick={closeModal}\r\n                    >\r\n                      Cerrar\r\n                  </button>\r\n                </div>\r\n              </CartModal>\r\n            )}\r\n            </div>\r\n          </div>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-6 gap-4\">\r\n            {cartData ? (\r\n              Object.keys(cartData).map((key) => {\r\n                const item = cartData[key];\r\n                return <CartItemCard key={key} item={item} />;\r\n              })\r\n            ) : (\r\n              <p>Cargado...</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>Usuario no autorizado</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartsManagement;\r\n","E:\\Projects\\hidrafront\\hidrasport-v2\\pages\\_app.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\breadcum\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\buttons\\FetchButton.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\cart\\CartItemCard.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\inputAuthForm.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\login.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\authmodal\\register.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\footer\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\hydrationZustand.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\navbar\\descktopNavbar.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\navbar\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\navbar\\mobileNavbar.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\spinner\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\layout\\WhatsappFloatingButton\\index.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\modals\\CartModal.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\product\\productCardItem.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\product\\productGaleryImage.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\product\\productImage.tsx",[],[],"E:\\Projects\\hidrafront\\hidrasport-v2\\components\\reviews\\index.tsx",[],[],{"ruleId":"179","severity":1,"message":"180","line":24,"column":6,"nodeType":"181","endLine":24,"endColumn":8,"suggestions":"182"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCart'. Either include it or remove the dependency array.","ArrayExpression",["183"],{"desc":"184","fix":"185"},"Update the dependencies array to be: [fetchCart]",{"range":"186","text":"187"},[1134,1136],"[fetchCart]"]